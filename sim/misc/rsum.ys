
# 这里是根据书上的P252 图4-7写出来的
# 首先在地址 0x0 开始
    .pos 0
    irmovq stack, %rsp  # 初始化栈指针
    call main           # 执行主函数
    halt

    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

# 开始主函数
main:
    irmovq ele1, %rdi   # 把链表头传入参数中
    call rsum_list
    ret

# 开始rsum_list函数
rsum_list:
    pushq %rbx          # 当前的结果保存在%rbx中
    xorq %rax, %rax     # 我们让寄存器%rax保存sum，且让他初始等于0
    andq %rdi, %rdi     # 设置条件码
    je l1               # 如果当前的参数是空指针的话，就返回了
    mrmovq (%rdi), %rbx # %rbx = node->val
    mrmovq 8(%rdi), %r10
    rrmovq %r10, %rdi
    call rsum_list
    addq %rbx, %rax
l1:
    popq %rbx
    ret

    .pos 0x200
stack:
